
http://www.jianshu.com/p/bf98c3626d8c
 webpack 的执行也很简单，直接执行
 $ webpack --display-error-details
 即可，后面的参数“--display-error-details”是推荐加上的，方便出错时能查阅更详尽的信息（比如 webpack 寻找模块的过程），从而更好定位到问题。
 其他主要的参数有：
 $ webpack --config XXX.js   //使用另一份配置文件（比如webpack.config2.js）来打包
 $ webpack --watch   //监听变动并自动打包
 $ webpack -p    //压缩混淆脚本，这个非常非常重要！
 $ webpack -d    //生成map映射文件，告知哪些模块被最终打包到哪里了


1.npm init
npm install webpack --save-dev
npm install node-sass babel-core babel-loader babel-preset-es2015 babel-preset-react style-loader css-loader url-loader jsx-loader sass-loader file-loader --save-dev
npm install react react-dom react-router n-zepto --save



2.webpack.config.js
var webpack = require('webpack');
module.exports = {
    entry: './src/js/main.js',
    output: {
        path: __dirname + '/web',
        filename: 'main.js'
    },
    plugins: [new webpack.ProvidePlugin({
        $: 'n-zepto'
    })],
    module: {
        loaders: [
            {test:/\.css$/,loader:'style-loader!css-loader'},
            {
                test:/\.jsx?$/,
                loader: 'babel',
                exclude: /node_modules/,
                query:{
                    presets: ['react','es2015']
                }
            },
            {test: /\.scss$/,loader: 'style!css!sass?sourceMap'},
            {test: /\.(jpg|png|gif)$/,loader: 'url-loader?limit=8192'},
            {test: /\.json$/,loader: 'json'}
        ]
    }
}


3.main.js
'user strict';
require('./../css/main.css');
let closePng = require('./../img/close.png');
require('./../img/comment-1.png');
require('./../img/comment-2.png');
require('./../img/comment-3.png');
require('./../img/favor.png');
require('./../img/no-favor.png');
let p1 = require('./../img/p1.png');
let statementPng = require('./../img/statement.png');



let callZoom = () => {
    if($('.news-content').hasClass('detail-zoom')){
        $('.news-content').removeClass('detail-zoom');
    }else{
        $('.news-content').addClass('detail-zoom');
    }
}


let callReport = () => {
    console.log('callReport');
}

let closeMask = () => {
    $('#mask').hide();
}

let openMask = () => {
    $('#mask').show();
}
let $callFavor = $('#callFavor');
$callFavor.click(() => {
    if($callFavor.hasClass('favor-icon')){
        $callFavor.removeClass('favor-icon').addClass('no-favor-icon');
    }else{
        $callFavor.removeClass('no-favor-icon').addClass('favor-icon');
    }
});
